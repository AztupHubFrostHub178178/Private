local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'
local notifications = loadstring(game:HttpGet(("https://raw.githubusercontent.com/AbstractPoo/Main/main/Notifications.lua"),true))()

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    Title = 'Project Vertigo | The Survival Game',
    Center = true, 
    AutoShow = true,
})

Library.KeybindFrame.Visible = false; -- todo: add a function for this

Library:OnUnload(function()
    Library.Unloaded = true
end)

local Settings = {HotbarKillAura=1,AmtSpeed=30,HotbarFarming=1}
local Tabs = {Main = Window:AddTab('Main'),['UI Settings'] = Window:AddTab('UI Settings'),}

--Functions


local Combat = Tabs.Main:AddLeftTabbox()
local Movement = Tabs.Main:AddLeftTabbox()
local Farming = Tabs.Main:AddRightTabbox()

local CombatTab = Combat:AddTab('Combat')
local MovementTab = Movement:AddTab('Movement')
local FarmingTab = Farming:AddTab('Farming')

CombatTab:AddDropdown('HotbarKillAura', {Values = {1,2,3,4,5},Default = 1,Multi = false,Text = 'Hotbar Slot For Kill Aura',})
CombatTab:AddToggle('KillAura', {Text = 'Kill Aura',Default = false})

MovementTab:AddToggle('Speed', {Text = 'Toggle Speed',Default = false})
MovementTab:AddSlider('AmtSpeed', {Text = 'Speed',Default = 30,Min = 16,Max = 33,Rounding = 0,Compact = false,})

FarmingTab:AddDropdown('HotbarFarming', {Values = {1,2,3,4,5},Default = 1,Multi = false,Text = 'Hotbar Slot For Farming',})
FarmingTab:AddToggle('FarmTrees', {Text = 'Auto Mine Nearby Trees',Default = false})
FarmingTab:AddToggle('FarmRocks', {Text = 'Auto Mine Nearby Rocks',Default = false})
FarmingTab:AddToggle('DestroyStruct', {Text = 'Auto Destroy Nearby Structures',Default = false})

--On Toggles
Toggles.KillAura:OnChanged(function()
    task.spawn(function()
        while Toggles.KillAura.Value == true do task.wait()
            for i,v in pairs(game:GetService("Players"):GetChildren()) do
                if game.Players.LocalPlayer.Character and v.Character and v.Team ~= game.Players.LocalPlayer.Team and (game.Players.LocalPlayer.Character:GetPivot().Position - v.Character:GetPivot().p).Magnitude <= 15 then
                    game:GetService("ReplicatedStorage").remoteInterface.interactions.meleePlayer:FireServer(Settings.HotbarKillAura,v)
                    task.wait(.05)
                end
            end
        end
    end)
end)
Toggles.Speed:OnChanged(function()
    task.spawn(function()
        while Toggles.Speed.Value do task.wait()
            if Toggles.Speed.Value == true and game.Players.LocalPlayer.Character.Humanoid and game.Players.LocalPlayer.Character.HumanoidRootPart then
                if game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BV") then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.BV:Destroy()
                end
                bv = Instance.new("BodyVelocity",game.Players.LocalPlayer.Character.HumanoidRootPart);bv.Name = "BV"; bv.MaxForce = Vector3.new(100000, 0, 100000); bv.Velocity = (game.Players.LocalPlayer.Character.Humanoid.MoveDirection) * Settings.AmtSpeed
            elseif Toggles.Speed.Value == false and game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BV") then
                game.Players.LocalPlayer.Character.HumanoidRootPart.BV:Destroy()
            end
        end
    end)
end)
Toggles.FarmTrees:OnChanged(function()
    task.spawn(function()
        while Toggles.FarmTrees.Value == true do task.wait()
            for i,v in pairs(game:GetService("Workspace").worldResources.choppable:GetDescendants()) do
                if v:IsA("Model") and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v:GetPivot().Position).Magnitude <= 15 then
                    game:GetService("ReplicatedStorage").remoteInterface.interactions.chop:FireServer(3,v,v:GetPivot())
                    task.wait()
                end
            end
        end
    end)
end)
Toggles.FarmRocks:OnChanged(function()
    task.spawn(function()
        while Toggles.FarmRocks.Value == true do task.wait()
            for i,v in pairs(game:GetService("Workspace").worldResources.mineable:GetDescendants()) do
                if v:IsA("Model") and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v:GetPivot().Position).Magnitude <= 15 then
                    game:GetService("ReplicatedStorage").remoteInterface.interactions.mine:FireServer(3,v,v:GetPivot())
                    task.wait()
                end
            end
        end
    end)
end)
Toggles.DestroyStruct:OnChanged(function()
    task.spawn(function()
        while Toggles.FarmRocks.Value == true do task.wait()
            for i,v in pairs(game:GetService("Workspace").placedStructures:GetDescendants()) do
                if v:IsA("Model") and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v:GetPivot().Position).Magnitude <= 15 then
                    game:GetService("ReplicatedStorage").remoteInterface.interactions.hitStructure:FireServer(3,v,v:GetPivot())
                    task.wait()
                end
            end
        end
    end)
end)

--Options
Options.HotbarKillAura:OnChanged(function()
    Settings.HotbarKillAura = Options.HotbarKillAura.Value
end)
Options.HotbarFarming:OnChanged(function()
    Settings.HotbarFarming = Options.HotbarFarming.Value
end)
Options.AmtSpeed:OnChanged(function()
    Settings.AmtSpeed = Options.AmtSpeed.Value
end)


local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' }) 
Library.ToggleKeybind = Options.MenuKeybind -- Allows you to have a custom keybind for the menu
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings() 
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' }) 
ThemeManager:SetFolder('ProjectVertigo')
SaveManager:SetFolder('ProjectVertigo/BlendingSimulator2')
SaveManager:BuildConfigSection(Tabs['UI Settings']) 
ThemeManager:ApplyToTab(Tabs['UI Settings'])
SaveManager:LoadAutoloadConfig()
